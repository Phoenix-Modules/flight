async function y(e){var a,n,l;const t=(l=(n=(a=e==null?void 0:e.flags)==null?void 0:a.dnd5e)==null?void 0:n.use)==null?void 0:l.itemUuid;if(!t){console.warn("cannot get item from chat message!");return}return await fromUuid(t)}async function v(e){var n;const t=(n=e==null?void 0:e.speaker)==null?void 0:n.token;if(!t){console.warn("There is no token for the initiator of this chat message!");return}const a=game.scenes.active.collections.tokens.search(t);if(a.length===0){console.warn("There is no token for the initiator of this chat message in the active scene!");return}return a[0]}async function w(e,t){return e.effects.find(n=>n.name===t.label)?!1:(await e.createEmbeddedDocuments("ActiveEffect",[t]),!0)}async function F(e,t){const a=e.effects.find(n=>n.name===t);return a?(await e.deleteEmbeddedDocuments("ActiveEffect",[a.id]),!0):!1}async function d(e,t){return e.effects.find(n=>n.name===t)!==void 0}const i={imagesFolder:"/modules/phoenix-modules-flight/images",moduleName:"phoenix-modules-flight",featurePack:"flight-features",macroPack:"flight-macros"},r={FlightHeightKey:"maxFlightHeight",IncrementKey:"heightIncrement",AcAdjustmentKey:"acAdjustment",ActionCostKey:"costsAction",TokenScaleKey:"scaleToken"},m={ModuleBanner:`${i.imagesFolder}/Module Banner.png`,Flying:`${i.imagesFolder}/Skill_Fly.png`,Land:`${i.imagesFolder}/Skill_Land.png`,Raise:`${i.imagesFolder}/Skill_Plus.png`,Lower:`${i.imagesFolder}/Skill_Minus.png`},s={FlyingLabel:"Take Flight",FlyingImage:m.Flying,RaiseLabel:"Fly Higher",RaiseImage:m.Raise,LowerLabel:"Fly Lower",LowerImage:m.Lower,LandLabel:"Land",LandImage:m.Land};async function b(){game.settings.register(i.moduleName,r.FlightHeightKey,{name:"Max Flight Height",hint:"The maximum height (in feet) that a character can fly.",scope:"world",config:!0,type:Number,default:100,restricted:!0,onChange:e=>{console.log(`Max flight height set to ${e}`)}}),game.settings.register(i.moduleName,r.IncrementKey,{name:"Raise/Lower Increment",hint:`The increment (in feet) that a character moves when using the ${s.RaiseLabel}/${s.LowerLabel} feature.`,scope:"world",config:!0,type:Number,default:5,restricted:!0,onChange:e=>{console.log(`Height increment set to ${e}`)}}),game.settings.register(i.moduleName,r.AcAdjustmentKey,{name:"Adjust AC when flying",hint:"How much AC (positive or negative) to adjust when in flying state",scope:"world",config:!0,type:Number,default:-5,restricted:!0,onChange:e=>{console.log(`AC adjustment set to ${e}`)}}),game.settings.register(i.moduleName,r.TokenScaleKey,{name:"Scale Token with Height",hint:"Scale the token bigger or smaller depending on height",scope:"world",config:!0,type:Boolean,default:!0,restricted:!0,onChange:e=>{console.log(`AC adjustment set to ${e}`)}})}function k(){return game.settings.get(i.moduleName,r.FlightHeightKey)}function L(){return game.settings.get(i.moduleName,r.IncrementKey)}function T(){return game.settings.get(i.moduleName,r.AcAdjustmentKey)}async function g(e,t){const a=t*.01;await e.document.update({texture:{scaleX:1+a,scaleY:1+a}})}const I=["Take Flight","Land","Fly Higher","Fly Lower"];async function x(e,t,a){const n=await y(e);if(!n)return;const l=I.find(c=>n.name===c);if(!l)return;const u=await v(e),o=canvas.tokens.controlled[0];if(game.user.isGM){o||ui.notifications.warn("Please select a token to initiate flight on."),await p(l,o.actor,o);return}if(u.actorId!==o.document.actorid){ui.notifications.warn("Please select your token to use this action.");return}await p(l,o.actor,o)}async function f(e,t){e.document.elevation!==t&&await e.document.update({elevation:t})}async function h(e,t){const a=T(),n={label:"Flying",icon:s.FlyingImage,changes:[{key:"system.attributes.ac.bonus",mode:CONST.ACTIVE_EFFECT_MODES.ADD,value:a}],statuses:["flying"],origin:e.uuid};t?await w(e,n):await F(e,n.label)}async function p(e,t,a){const n=L(),l=k(),u=a.document.elevation;switch(e){case"Take Flight":await h(t,!0),await f(a,n),await g(a,n);break;case"Land":if(!await d(t,"Flying"))return;await h(t,!1),await f(a,0),await g(a,0);break;case"Fly Higher":if(!await d(t,"Flying"))return;const o=Math.min((u||0)+n,l);return await f(a,o),await g(a,o),!1;case"Fly Lower":if(!await d(t,"Flying"))return;const c=Math.max((u||0)-n,n);return await f(a,c),await g(a,c),!1;default:console.warn(`Unknown flight command: ${e}`)}}const A=[{name:s.FlyingLabel,type:"feat",system:{description:{value:"<p>Take flight, allowing you to see over objects and move over the battlefield</p>",chat:"<p>Take flight, allowing you to see over objects and move over the battlefield</p>"},source:{},activation:{type:"action",cost:1,condition:""},duration:{value:"",units:""},cover:null,crewed:!1,target:{value:"",width:null,units:"",type:"self",prompt:!0},range:{value:null,long:null,units:"self"},uses:{value:null,max:"",per:null,recovery:"",prompt:!0},consume:{type:"",target:null,amount:null,scale:!1},ability:"none",actionType:"util",attack:{bonus:"",flat:!1},chatFlavor:"",critical:{threshold:null,damage:""},damage:{parts:[],versatile:""},enchantment:null,formula:"",save:{ability:"",dc:null,scaling:"spell"},summons:null,type:{value:"race",subtype:""},prerequisites:{level:null},properties:[],requirements:"",recharge:{value:null,charged:!1}},img:s.FlyingImage,effects:[]},{name:s.LandLabel,type:"feat",system:{description:{value:"<p>Land on the ground, removing flying status.</p>",chat:"<p>Land on the ground, removing flying status.</p>"},source:{},activation:{},duration:{value:"",units:""},cover:null,crewed:!1,target:{value:"",width:null,units:"",type:"self",prompt:!0},range:{value:null,long:null,units:"self"},uses:{value:null,max:"",per:null,recovery:"",prompt:!0},consume:{type:"",target:null,amount:null,scale:!1},ability:"none",actionType:"util",attack:{bonus:"",flat:!1},chatFlavor:"",critical:{threshold:null,damage:""},damage:{parts:[],versatile:""},enchantment:null,formula:"",save:{ability:"",dc:null,scaling:"spell"},summons:null,type:{value:"race",subtype:""},prerequisites:{level:null},properties:[],requirements:"",recharge:{value:null,charged:!1}},img:s.LandImage,effects:[]},{name:s.RaiseLabel,type:"feat",system:{description:{value:"<p>Increase the height at which you are flying</p>",chat:"<p>Increase the height at which you are flying</p>"},source:{},activation:{},duration:{value:"",units:""},cover:null,crewed:!1,target:{value:"",width:null,units:"",type:"self",prompt:!0},range:{value:null,long:null,units:"self"},uses:{value:null,max:"",per:null,recovery:"",prompt:!0},consume:{type:"",target:null,amount:null,scale:!1},ability:"none",actionType:"util",attack:{bonus:"",flat:!1},chatFlavor:"",critical:{threshold:null,damage:""},damage:{parts:[],versatile:""},enchantment:null,formula:"",save:{ability:"",dc:null,scaling:"spell"},summons:null,type:{value:"race",subtype:""},prerequisites:{level:null},properties:[],requirements:"",recharge:{value:null,charged:!1}},img:s.RaiseImage,effects:[]},{name:s.LowerLabel,type:"feat",system:{description:{value:"<p>Decrease the height at which you are flying</p>",chat:"<p>Decrease the height at which you are flying</p>"},source:{},activation:{},duration:{value:"",units:""},cover:null,crewed:!1,target:{value:"",width:null,units:"",type:"self",prompt:!0},range:{value:null,long:null,units:"self"},uses:{value:null,max:"",per:null,recovery:"",prompt:!0},consume:{type:"",target:null,amount:null,scale:!1},ability:"none",actionType:"util",attack:{bonus:"",flat:!1},chatFlavor:"",critical:{threshold:null,damage:""},damage:{parts:[],versatile:""},enchantment:null,formula:"",save:{ability:"",dc:null,scaling:"spell"},summons:null,type:{value:"race",subtype:""},prerequisites:{level:null},properties:[],requirements:"",recharge:{value:null,charged:!1}},img:s.LowerImage,effects:[]}];async function E(){const e=`${i.moduleName}.${i.featurePack}`,t=game.packs.find(a=>a.metadata.id===e);if(!t)throw new Error("Compendium flight-features not found");await C(t,A)}async function C(e,t){e.configure({locked:!1});for(const a of t)if(!e.index.find(l=>l.name===a.name)){let l;l=await Item.create(a,{pack:e.metadata.id}),console.log(`Macro '${l.name}' added to compendium ${e.metadata.name}`)}e.configure({locked:!0})}Hooks.once("init",async()=>{await b(),console.log("Phoenix Modules - Flight is installed!")});Hooks.once("ready",async()=>{await E()});Hooks.on("preCreateChatMessage",(e,t,a)=>{if(x(e),[s.RaiseLabel,s.LowerLabel].find(u=>e.content.includes(u)))return!1});
//# sourceMappingURL=module.js.map
